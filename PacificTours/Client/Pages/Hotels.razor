@page "/Hotels"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Hotels</h3>

<br/>

<div class="row">
    <div class="col-sm-1">
        <button class="btn btn-primary">All Hotels</button>
    </div>
    <div class="col-sm-4">
        <div class="row">
            <div class="col-sm-2">
                <p>Or select a date</p>
            </div>
            <div class="col-sm-2">
                <InputDate TValue="DateOnly" @bind-Value="date1" Placeholder="Enter Date"/>
            </div>
            <div class="col-sm-2 offset-sm-1">
                <button class="btn btn-primary" onclick="">Submit</button>
            </div>
        </div>
    </div>
</div>


@code {

    private string _userId = "";
    private string _userName;
    
    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now.AddDays(1));

    protected override async Task OnInitializedAsync()
    {
        await AuthUser();
        await base.OnInitializedAsync();
    }

    private async Task AuthUser()
    {
        var myStateProv = AuthenticationStateProvider as CustomAuthenticationStateProvider;
        var authState = await myStateProv.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.Name == "")
        {
            // forceLoad needed to actually load the page, otherwise url changes, but redirect doesn't occur
            NavigationManager.NavigateTo("/Identity/Account/Login", forceLoad: true);
        }

    }

    private async Task GetAllHotels()
    {
        
    }

    private async Task GetHotelsAvailableOn()
    {
        
    }

}