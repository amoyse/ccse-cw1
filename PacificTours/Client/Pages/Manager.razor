@page "/Manager"
@using PacificTours.Shared.Entities
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<h3>Manager</h3>

@if (_bookings is null)
{
    <span>Loading Bookings...</span>
}
else
{
    <table>
        <thead>
        <tr>
            <th>Booking Id</th>
            <th>User Id</th>
            <th>Date Booked</th>
            <th>Total Cost</th>
            <th>Booking Status</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var booking in _bookings)
            {
                <tr>
                    <td width="8%">@booking.Id</td>
                    <td width="8%">@booking.UserId</td>
                    <td width="12%">@booking.BookingDate</td>
                    <td width="12%">@booking.TotalCost</td>
                    <td width="12%">@booking.Status</td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    List<Booking>? _bookings;

    protected override async Task OnInitializedAsync()
    {
        await AuthUser();
        var isAdmin = await Http.GetFromJsonAsync<bool>("api/Auth/IsAuthorized");
        if (!isAdmin)
        {
            NavigationManager.NavigateTo("/");
        }
        
        var result = await Http.GetFromJsonAsync<List<Booking>>("api/Booking/GetAllBookingsForAllUsers");
        if (result != null)
        {
            _bookings = result;
        }
    }

    private async Task AuthUser()
    {
        var myStateProv = AuthenticationStateProvider as CustomAuthenticationStateProvider;
        var authState = await myStateProv.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.Name == "")
        {
            // forceLoad needed to actually load the page, otherwise url changes, but redirect doesn't occur
            NavigationManager.NavigateTo("/Identity/Account/Login", forceLoad: true);
        }
    }
}