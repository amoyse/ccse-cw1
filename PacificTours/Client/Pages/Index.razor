@page "/"
@using System.Security.Claims
@using PacificTours.Shared
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<PageTitle>Home</PageTitle>

@if (_userId == "")
{
    <p>Loading...</p>
}
else
{
    <h1>Welcome to your account, @_userName</h1>
    <br/>
    
    <h4>Your User ID is: @_userId</h4>
    
    @if (_tourInfo is not null || _hotelInfo is not null)
    {
        <a class="btn btn-primary" href="/BookingInfo">View Booking Info</a>
    }
    
}


@code {

    private string _userId = "";
    private string _userName;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    
    TourBookingInfoDto? _tourInfo;
    HotelBookingInfoDto? _hotelInfo;

    protected override async Task OnInitializedAsync()
    {
        await AuthUser();
        
        var tourResult = await Http.GetFromJsonAsync<TourBookingInfoDto>("api/Booking/TourBookingInfo");
        var hotelResult = await Http.GetFromJsonAsync<HotelBookingInfoDto>("api/Booking/HotelBookingInfo");

        if (tourResult != null)
        {
            _tourInfo = tourResult;
        }
        if (hotelResult != null)
        {
            _hotelInfo = hotelResult;
        }
        
        await base.OnInitializedAsync();
    }
    

    private async Task AuthUser()
    {
        var myStateProv = AuthenticationStateProvider as CustomAuthenticationStateProvider;
        var authState = await myStateProv.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.Name != "")
        {
            _userName = user.Identity.Name;
            _claims = user.Claims;
            _userId = $"{_claims.First().Value}";
        }
        else
        {
            // forceLoad needed to actually load the page, otherwise url changes, but redirect doesn't occur
            NavigationManager.NavigateTo("/Identity/Account/Login", forceLoad:true);
        }
    }

}
